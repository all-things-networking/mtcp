#ifndef MTP_INSTR_H
#define MTP_INSTR_H

#include "mtcp.h"
#include "tcp_stream.h"

/********************** MTP Instructions **********************
 * This module implements MTP instruction handling.
 * MTP instruction list:
 *  1. pkt_gen_instr
 *  2. new_ctx_instr
 *  3. flush_and_notify_instr
 *  4. timer_start_instr
 *  5. timer_cancel_instr
 *  6. timer_restart_instr
 *
 * This module is target-dependent, and won't be generated by
 * the MTP compiler.
 **************************************************************/

// pkt_gen_instr
uint16_t CalculateOptionLength(uint8_t flags);
int SendMTPPacket(struct mtcp_manager *mtcp, tcp_stream *cur_stream, 
	uint32_t cur_ts, uint8_t flags, uint32_t seq, uint32_t ack, 
    uint16_t window, uint8_t *payload, uint16_t payloadlen);

// new_ctx_instr
int CreateListenCtx(mtcp_manager_t mtcp, int sockid, int backlog);
tcp_stream* CreateCtx(mtcp_manager_t mtcp, uint32_t local_ip, uint16_t local_port,
	uint32_t remote_ip, uint16_t remote_port, uint32_t init_seq, uint16_t rwnd,
	uint32_t cur_ts, struct tcphdr* tcph);

// flush_and_notify_intr
int FlushAndNotify(mtcp_manager_t mtcp, tcp_stream *cur_stream, 
	char* buf, int len, socket_map_t socket);

// timer_instr
void TimerStart(mtcp_manager_t mtcp, tcp_stream *stream, uint32_t cur_ts);
void TimerCancel(mtcp_manager_t mtcp, tcp_stream *stream);
void TimerRestart(mtcp_manager_t mtcp, tcp_stream *stream, uint32_t cur_ts);

#endif